# Copyright 2014-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"). You
# may not use this file except in compliance with the License. A copy of
# the License is located at
#
# 	http://aws.amazon.com/apache2.0/
#
# or in the "license" file accompanying this file. This file is
# distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
# ANY KIND, either express or implied. See the License for the specific
# language governing permissions and limitations under the License.

[Unit]
Description=ECS Agent systemd unit file
Documentation=https://docs.aws.amazon.com/AmazonECS/latest/developerguide/
Requires=docker.service
After=docker.service

[Service]
# It is recommended in production to version pin the ECS Agent 
# to a known version vs running the latest flag on the docker container.
# See https://github.com/aws/amazon-ecs-agent/releases for agent versions.

# It is recommended to use a systemd drop-in file vs editing this line or file.
# Your drop-in file could look like this:
#
#       [Service]
#       Environment=ECS_AGENT_VERSION=v1.17.2
#
# Depending on the OS, it could be placed in 
# /etc/systemd/system/amazon-ecs-agent.d , and named 
# ecs_agent_version_override.conf
Environment=ECS_AGENT_VERSION=latest

# The logic around the ECS Agent restart:
#   - Restart on failure
#   - Wait 5 seconds between restart
#   - If the ECS Agent restarts more then 15 times in 5 minutes,
# it will stay failed
Restart=on-failure
RestartSec=5s
StartLimitInterval=5min
StartLimitBurst=15

# Allow the port proxy to route traffic using loopback addresses
ExecStartPre=/usr/sbin/sysctl --write net.ipv4.conf.all.route_localnet=1

# IPTable rooles needed to enable IAM Roles for Tasks.
ExecStartPre=/usr/sbin/iptables -t nat -A PREROUTING -p tcp -d 169.254.170.2 --dport 80 -j DNAT --to-destination 127.0.0.1:51679
ExecStartPre=/usr/sbin/iptables -t nat -A OUTPUT -d 169.254.170.2 -p tcp -m tcp --dport 80 -j REDIRECT --to-ports 51679

# Create the directories needed for the ECS Agent.
ExecStartPre=-/bin/mkdir -pv /var/ecs-data /etc/ecs /var/log/ecs

# Stop the ECS Agent if it was running. Docker stop is used
# as it will send a SIGTEM and wait 10 seconds before sending SIGKILL
ExecStartPre=-/usr/bin/docker stop --time 10 ecs-agent

# Remove the container named "ecs-agent"
ExecStartPre=-/usr/bin/docker rm ecs-agent

# The ECS Agent is started via docker run
ExecStart=/usr/bin/docker run --name ecs-agent \
    --detach=true \
    --cap-add=SYS_ADMIN \
    --cap-add=NET_ADMIN \
    --volume=/proc:/host/proc \
    --volume=/sbin:/sbin \
    --volume=/lib64:/lib64 \
    --volume=/var/run:/var/run \
    --volume=/var/log/ecs/:/log:Z \
    --volume=/var/lib/ecs/data:/data:Z \
    --volume=/etc/ecs:/etc/ecs \
    --volume=/var/lib/ecs/dhclient:/var/lib/dhclient \
    --volume=/opt/aws/amazon-ecs-cni-plugins:/amazon-ecs-cni-plugins \
    --volume=/var/run/docker.sock:/var/run/docker.sock \
    --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro \
    --volume=/var/run/docker/execdriver/native:/var/lib/docker/execdriver/native:ro \
    --net=host \
    --pid=host \
    --env-file=/etc/ecs/ecs.config \
    amazon/amazon-ecs-agent:${ECS_AGENT_VERSION}

# Docker stop is used as it will send a SIGTEM and wait 10 seconds
# before sending SIGKILL
ExecStop=/usr/bin/docker stop --time 10 ecs-agent

# Remove the container named "ecs-agent"
ExecStop=/usr/bin/docker rm ecs-agent

[Install]
WantedBy=default.target
